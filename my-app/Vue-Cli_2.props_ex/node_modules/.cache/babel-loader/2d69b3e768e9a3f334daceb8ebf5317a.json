{"remainingRequest":"C:\\Workspace_Vue\\my-app\\Vue-Cli_2.props_ex\\node_modules\\babel-loader\\lib\\index.js!C:\\Workspace_Vue\\my-app\\Vue-Cli_2.props_ex\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Workspace_Vue\\my-app\\Vue-Cli_2.props_ex\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Workspace_Vue\\my-app\\Vue-Cli_2.props_ex\\src\\components\\UserDetail.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Workspace_Vue\\my-app\\Vue-Cli_2.props_ex\\src\\components\\UserDetail.vue","mtime":1580827620862},{"path":"C:\\Workspace_Vue\\my-app\\Vue-Cli_2.props_ex\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Workspace_Vue\\my-app\\Vue-Cli_2.props_ex\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Workspace_Vue\\my-app\\Vue-Cli_2.props_ex\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Workspace_Vue\\my-app\\Vue-Cli_2.props_ex\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { eventBus } from \"../main\"; //부모컴포넌트에서에서 User.vue 에서\n//값을 주면 자식컴포넌트에서 값받을게 하고 말을해줘야하는데\n//그게바로 props라는 프로퍼티로 사용\n//props프로퍼티는 array형태로 값을 선언함\n\nexport default {\n  data: function data() {\n    return {\n      editedDate: null\n    };\n  },\n  //부모에서 만든 변수명을 props에 선언\n  // nameOfChild 가 Object엿는지 String 형태가 기억나지않을때\n  // 기록해주는 방법 array형태가 아닌 Object로 써주고\n  // 이미 부모컴포넌트에서 값이 상속되어있기때문에 데이터 타입을 써줌(?) \n  props: ['name', 'address', 'phone', 'hasDog'],\n  computed: {\n    hasDogKr: function hasDogKr() {\n      return this.hasDog == true ? '있음' : '없음';\n    }\n  },\n  created: function created() {\n    var _this = this;\n\n    //$on('보낸신호' , callback함수) : 이벤트버스에서 이벤트리스너의역할\n    //뷰 인스턴스 내에서 콜백함수를 쓸때 arrow function표기법을 통해 작성해야\n    //this가 뷰모델을 가르킴\n    eventBus.$on('userWasEdited', function (date) {\n      _this.editedDate = date;\n    });\n  },\n  methods: {\n    getDateAndTime: function getDateAndTime(date) {\n      if (date != null) {\n        var hour = date.getHours();\n        var minutes = date.getMinutes();\n        var fullDate = \"\".concat(date.getFullYear(), \"/\").concat(date.getMonth() + 1, \"/\").concat(date.getDate());\n        return \"\".concat(fullDate, \" \").concat(hour, \":\").concat(minutes);\n      } else {\n        return null;\n      }\n    }\n  }\n};",{"version":3,"sources":["UserDetail.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0CA,SAAA,QAAA,QAAA,SAAA,C,CACA;AACA;AACA;AACA;;AACA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,UAAA,EAAA;AADA,KAAA;AAGA,GALA;AAMA;AAEA;AACA;AACA;AACA,EAAA,KAAA,EAAA,CAAA,MAAA,EAAA,SAAA,EAAA,OAAA,EAAA,QAAA,CAXA;AAYA,EAAA,QAAA,EAAA;AACA,IAAA,QADA,sBACA;AACA,aAAA,KAAA,MAAA,IAAA,IAAA,GAAA,IAAA,GAAA,IAAA;AACA;AAHA,GAZA;AAiBA,EAAA,OAjBA,qBAiBA;AAAA;;AACA;AACA;AACA;AACA,IAAA,QAAA,CAAA,GAAA,CAAA,eAAA,EAAA,UAAA,IAAA,EAAA;AACA,MAAA,KAAA,CAAA,UAAA,GAAA,IAAA;AACA,KAFA;AAGA,GAxBA;AAyBA,EAAA,OAAA,EAAA;AACA,IAAA,cADA,0BACA,IADA,EACA;AACA,UAAA,IAAA,IAAA,IAAA,EAAA;AACA,YAAA,IAAA,GAAA,IAAA,CAAA,QAAA,EAAA;AACA,YAAA,OAAA,GAAA,IAAA,CAAA,UAAA,EAAA;AACA,YAAA,QAAA,aAAA,IAAA,CAAA,WAAA,EAAA,cAAA,IAAA,CAAA,QAAA,KAAA,CAAA,cAAA,IAAA,CAAA,OAAA,EAAA,CAAA;AACA,yBAAA,QAAA,cAAA,IAAA,cAAA,OAAA;AACA,OALA,MAKA;AACA,eAAA,IAAA;AACA;AACA;AAVA;AAzBA,CAAA","sourcesContent":["<template>\n  <div class=\"red lighten-3 pa-3\">\n    <h3>자세한 회원 정보를 확인합니다.</h3>\n    <p>상세사항</p>\n    <v-list dense>\n      <v-list-tile>\n        <v-list-tile-content>이름:</v-list-tile-content>\n        <v-list-tile-content class=\"align-end\">\n          {{ name }}\n        </v-list-tile-content>\n      </v-list-tile>\n      <v-list-tile>\n        <v-list-tile-content>주소:</v-list-tile-content>\n        <v-list-tile-content class=\"align-end\">\n          {{ address }}\n        </v-list-tile-content>\n      </v-list-tile>\n      <v-list-tile>\n        <v-list-tile-content>전화번호:</v-list-tile-content>\n        <v-list-tile-content class=\"align-end\">\n          {{ phone }}\n        </v-list-tile-content>  \n      </v-list-tile>\n      <v-list-tile>\n        <v-list-tile-content>반려견유무:</v-list-tile-content>\n        <v-list-tile-content class=\"align-end\">\n          {{ hasDogKr }}\n        </v-list-tile-content>\n      </v-list-tile>\n      <v-list-tile>\n        <v-list-tile-content>수정일자:</v-list-tile-content>\n        <v-list-tile-content class=\"align-end\">\n          {{ getDateAndTime(editedDate) }}\n        </v-list-tile-content>\n      </v-list-tile>\n    \n    \n    </v-list>  \n  </div>\n</template>\n\n<script>\nimport { eventBus } from \"../main\"\n//부모컴포넌트에서에서 User.vue 에서\n//값을 주면 자식컴포넌트에서 값받을게 하고 말을해줘야하는데\n//그게바로 props라는 프로퍼티로 사용\n//props프로퍼티는 array형태로 값을 선언함\nexport default {\n  data(){\n    return {\n      editedDate: null\n    }\n  },\n  //부모에서 만든 변수명을 props에 선언\n  \n  // nameOfChild 가 Object엿는지 String 형태가 기억나지않을때\n  // 기록해주는 방법 array형태가 아닌 Object로 써주고\n  // 이미 부모컴포넌트에서 값이 상속되어있기때문에 데이터 타입을 써줌(?) \n  props:['name','address','phone','hasDog'],\n  computed:{\n    hasDogKr(){\n      return this.hasDog == true ? '있음' : '없음'\n    }\n  },\n  created() {\n    //$on('보낸신호' , callback함수) : 이벤트버스에서 이벤트리스너의역할\n    //뷰 인스턴스 내에서 콜백함수를 쓸때 arrow function표기법을 통해 작성해야\n    //this가 뷰모델을 가르킴\n    eventBus.$on('userWasEdited', (date) => {\n      this.editedDate = date\n    })\n  },\n  methods:{\n    getDateAndTime(date){\n      if(date != null) {\n        let hour = date.getHours()\n        let minutes = date.getMinutes()\n        let fullDate = `${date.getFullYear()}/${date.getMonth()+1}/${date.getDate()}`\n        return `${fullDate} ${hour}:${minutes}`\n      } else {\n        return null\n      }\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/components"}]}